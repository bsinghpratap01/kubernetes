# kubectl config set-context --current --namespace=dev
# kubectl config view --minify |grep -i namespace
# kubectl config get-contexts

Before removing any namespace verify objects within it.

# kubectl get all
# kubectl get all --namespace=dev

# Kubectl get namespaces
# kubectl delete namespace dev

vi dev-quota.yaml

apiVersion: v1
kind: ResourceQuota
metadata:
   name: dev-quota
spec:
  hard:
    requests.cpu: 1
    requests.memory: 1Gi
    limits.cpu: 2
    limits.memory: 2Gi
    
    
    # kubectl create -f dev-quota.yaml --namespace=dev
    
    We can also define namespaace in YAML.
    
apiVersion: v1
kind: ResourceQuota
metadata:
   name: dev-quota
   namespace: dev
spec:
  hard:
    requests.cpu: 1
    requests.memory: 1Gi
    limits.cpu: 2
    limits.memory: 2Gi
    
# vi prod-object-quota.yaml
    
apiVersion: v1
kind: ResourceQuota
metadata:
   name: prod-object-quota
   namespace: prod
spec:
  hard:
    configmaps: "8"
    persistentvolumeclaims: "4"
    pods: "3"
    replicationcontrollers: "4"
    secrets: "10"
    services: "10"
    services.loadbalancers: "2"
    
    
   # kubectl get quota --namespace=prod
   # kubectl describe quota prod-quota --namespace=prod
   
   Check all quota applied on a namespace.
   
   # kubectl describe quota --namespace=prod
   
   Create a pod with cpu and memory limit inside the "prod" namespace.
   
   # vi pod-with-limits.yaml
   
   apiVersion: v1
   kind: Pod
   metadata:
      name: pod-with-limits
      namespace: prod
   spec:
      containers:
              - name: my-container
                image: nginx
                resources:
                    requests:
                        cpu: "0.5"
                        memory: "300Mi"
                    limits:
                        cpu: "1"
                        memory: "500Mi"
                     
   
    
